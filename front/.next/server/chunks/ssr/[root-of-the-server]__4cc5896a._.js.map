{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/Documents/dev/ownible_chiliz_2025/front/hooks/use-rwa-api.ts"],"sourcesContent":["import { useState, useCallback } from 'react'\nimport { useWallet } from '@/contexts/wallet-context'\nimport { toast } from 'sonner'\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001'\n\nexport interface RWAApiResponse {\n  success: boolean\n  transactionHash?: string\n  blockNumber?: number\n  gasUsed?: string\n  error?: string\n}\n\nexport interface RWATokenData {\n  tokenId: string\n  rwaType: string\n  percent: string\n  metadataURI: string\n  balance: string\n}\n\nexport interface UserTokensResponse {\n  address: string\n  tokens: RWATokenData[]\n}\n\nexport interface MintRWARequest {\n  to: string\n  amount: number\n  rwaType: string\n  percent: number\n  metadataURI: string\n}\n\nexport interface BalanceResponse {\n  address: string\n  tokenId: string\n  balance: string\n}\n\nexport interface ContractInfoResponse {\n  address: string\n  owner: string\n  network: string\n  chainId: number\n}\n\nexport const useRWAApi = () => {\n  const { address } = useWallet()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleApiCall = useCallback(async <T>(\n    apiCall: () => Promise<Response>,\n    successMessage?: string,\n    errorMessage?: string\n  ): Promise<T | null> => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      const response = await apiCall()\n      const data = await response.json()\n\n      if (!response.ok) {\n        throw new Error(data.error || 'API request failed')\n      }\n\n      if (successMessage) {\n        toast.success(successMessage)\n      }\n\n      return data as T\n    } catch (err) {\n      const errorMsg = err instanceof Error ? err.message : 'An error occurred'\n      setError(errorMsg)\n      \n      if (errorMessage) {\n        toast.error(errorMessage)\n      }\n      \n      return null\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  // Health check\n  const checkHealth = useCallback(async () => {\n    return handleApiCall<{ message: string; contract: string; network: string }>(\n      () => fetch(`${API_BASE_URL}/`),\n      'API is healthy',\n      'Failed to check API health'\n    )\n  }, [handleApiCall])\n\n  // Get contract info\n  const getContractInfo = useCallback(async () => {\n    return handleApiCall<ContractInfoResponse>(\n      () => fetch(`${API_BASE_URL}/contract/info`),\n      undefined,\n      'Failed to get contract info'\n    )\n  }, [handleApiCall])\n\n  // Mint RWA token\n  const mintRWA = useCallback(async (request: MintRWARequest) => {\n    return handleApiCall<RWAApiResponse>(\n      () => fetch(`${API_BASE_URL}/mint`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(request)\n      }),\n      'RWA token minted successfully!',\n      'Failed to mint RWA token'\n    )\n  }, [handleApiCall])\n\n  // Get user balance for a specific token\n  const getBalance = useCallback(async (tokenId: string, userAddress?: string) => {\n    const targetAddress = userAddress || address\n    if (!targetAddress) {\n      toast.error('Wallet not connected')\n      return null\n    }\n\n    return handleApiCall<BalanceResponse>(\n      () => fetch(`${API_BASE_URL}/balance/${targetAddress}/${tokenId}`),\n      undefined,\n      'Failed to get balance'\n    )\n  }, [handleApiCall, address])\n\n  // Get batch balances\n  const getBatchBalances = useCallback(async (addresses: string[], tokenIds: string[]) => {\n    return handleApiCall<{ balances: string[] }>(\n      () => fetch(`${API_BASE_URL}/balances/batch`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ addresses, tokenIds })\n      }),\n      undefined,\n      'Failed to get batch balances'\n    )\n  }, [handleApiCall])\n\n  // Get RWA metadata\n  const getRWAData = useCallback(async (tokenId: string) => {\n    return handleApiCall<{\n      tokenId: string\n      rwaType: string\n      percent: string\n      metadataURI: string\n    }>(\n      () => fetch(`${API_BASE_URL}/rwa/${tokenId}`),\n      undefined,\n      'Failed to get RWA data'\n    )\n  }, [handleApiCall])\n\n  // Get token URI\n  const getTokenURI = useCallback(async (tokenId: string) => {\n    return handleApiCall<{ tokenId: string; uri: string }>(\n      () => fetch(`${API_BASE_URL}/uri/${tokenId}`),\n      undefined,\n      'Failed to get token URI'\n    )\n  }, [handleApiCall])\n\n  // Get all user tokens\n  const getUserTokens = useCallback(async (userAddress?: string) => {\n    const targetAddress = userAddress || address\n    if (!targetAddress) {\n      toast.error('Wallet not connected')\n      return null\n    }\n\n    return handleApiCall<UserTokensResponse>(\n      () => fetch(`${API_BASE_URL}/user/${targetAddress}/tokens`),\n      undefined,\n      'Failed to get user tokens'\n    )\n  }, [handleApiCall, address])\n\n  // Transfer token\n  const transferToken = useCallback(async (\n    from: string,\n    to: string,\n    tokenId: string,\n    amount: number\n  ) => {\n    return handleApiCall<RWAApiResponse>(\n      () => fetch(`${API_BASE_URL}/transfer`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ from, to, tokenId, amount })\n      }),\n      'Token transferred successfully!',\n      'Failed to transfer token'\n    )\n  }, [handleApiCall])\n\n  // Utility function to create metadata URI\n  const createMetadataURI = useCallback((metadata: {\n    name: string\n    description: string\n    image?: string\n    attributes?: Array<{ trait_type: string; value: string }>\n  }) => {\n    // In a real app, this would upload to IPFS\n    const mockHash = Date.now().toString(36) + Math.random().toString(36).substr(2)\n    return `ipfs://mock-${mockHash}.json`\n  }, [])\n\n  // Utility function to format RWA type\n  const formatRWAType = useCallback((type: string) => {\n    return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n  }, [])\n\n  // Utility function to calculate portfolio value\n  const calculatePortfolioValue = useCallback((tokens: RWATokenData[]) => {\n    // Mock calculation - in real app, this would use actual market prices\n    return tokens.reduce((total, token) => {\n      const mockPrice = 15.50 // Mock price per token\n      const balance = parseInt(token.balance) || 0\n      return total + (balance * mockPrice)\n    }, 0)\n  }, [])\n\n  return {\n    // State\n    loading,\n    error,\n    \n    // API methods\n    checkHealth,\n    getContractInfo,\n    mintRWA,\n    getBalance,\n    getBatchBalances,\n    getRWAData,\n    getTokenURI,\n    getUserTokens,\n    transferToken,\n    \n    // Utility methods\n    createMetadataURI,\n    formatRWAType,\n    calculatePortfolioValue,\n    \n    // Clear error\n    clearError: () => setError(null)\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/Documents/dev/ownible_chiliz_2025/front/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { ArrowRight, Music, Trophy, Shirt, Users, TrendingUp, Sparkles } from 'lucide-react'\nimport { useWallet } from '@/contexts/wallet-context'\nimport { useRWAApi } from '@/hooks/use-rwa-api'\nimport Link from 'next/link'\n\ninterface MarketStats {\n  totalValueLocked: string\n  activeRWAs: number\n  totalOwners: number\n}\n\nexport default function Home() {\n  const { isConnected, address } = useWallet()\n  const { getContractInfo } = useRWAApi()\n  const [marketStats, setMarketStats] = useState<MarketStats>({\n    totalValueLocked: '0',\n    activeRWAs: 0,\n    totalOwners: 0\n  })\n\n  // Fetch real market stats\n  useEffect(() => {\n    const fetchMarketStats = async () => {\n      try {\n        // Get contract info\n        const contractInfo = await getContractInfo()\n        \n        // Scan for existing RWAs\n        let activeRWAs = 0\n        const promises = []\n        \n        for (let i = 1; i <= 20; i++) {\n          promises.push(\n            fetch(`http://localhost:3001/rwa/${i}`)\n              .then(response => response.json())\n              .then(data => {\n                if (data.rwaType && data.rwaType !== '') {\n                  activeRWAs++\n                }\n              })\n              .catch(() => {})\n          )\n        }\n        \n        await Promise.all(promises)\n        \n        // Calculate mock TVL based on active RWAs\n        const mockTVL = activeRWAs * 125000 + Math.random() * 500000\n        \n        setMarketStats({\n          totalValueLocked: mockTVL.toFixed(0),\n          activeRWAs,\n          totalOwners: Math.floor(activeRWAs * 15 + Math.random() * 100)\n        })\n      } catch (error) {\n        console.error('Error fetching market stats:', error)\n      }\n    }\n\n    fetchMarketStats()\n  }, [])\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-indigo-50\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden px-6 py-20\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-purple-600/10 to-indigo-600/10\" />\n        <div className=\"relative mx-auto max-w-7xl\">\n          <div className=\"text-center\">\n            <div className=\"mb-8\">\n              <Badge variant=\"secondary\" className=\"mb-4 bg-purple-100 text-purple-800\">\n                <Sparkles className=\"mr-2 h-4 w-4\" />\n                Powered by Chiliz\n              </Badge>\n              <h1 className=\"text-6xl font-bold tracking-tight text-gray-900 sm:text-7xl\">\n                Own<span className=\"text-purple-600\">ible</span>\n              </h1>\n              <p className=\"mt-6 text-xl leading-8 text-gray-600 max-w-2xl mx-auto\">\n                The future of sports & entertainment ownership. Tokenize real-world assets, \n                from music rights to player contracts, all on Chiliz blockchain.\n              </p>\n            </div>\n            \n            <div className=\"flex justify-center gap-4 mb-12\">\n              <Link href=\"/marketplace\">\n                <Button size=\"lg\" className=\"bg-purple-600 hover:bg-purple-700\">\n                  Explore RWAs\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n              <Link href=\"/create\">\n                <Button size=\"lg\" variant=\"outline\">\n                  Create RWA\n                </Button>\n              </Link>\n            </div>\n\n            {/* Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n              <Card className=\"border-0 shadow-lg bg-white/80 backdrop-blur-sm\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"text-3xl font-bold text-purple-600\">\n                    ${parseFloat(marketStats.totalValueLocked).toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Total Value Locked</div>\n                </CardContent>\n              </Card>\n              <Card className=\"border-0 shadow-lg bg-white/80 backdrop-blur-sm\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"text-3xl font-bold text-indigo-600\">\n                    {marketStats.activeRWAs}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Active RWAs</div>\n                </CardContent>\n              </Card>\n              <Card className=\"border-0 shadow-lg bg-white/80 backdrop-blur-sm\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"text-3xl font-bold text-green-600\">\n                    {marketStats.totalOwners > 1000 ? \n                      `${(marketStats.totalOwners / 1000).toFixed(1)}K` : \n                      marketStats.totalOwners\n                    }\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Owners</div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* RWA Categories */}\n      <section className=\"px-6 py-20\">\n        <div className=\"mx-auto max-w-7xl\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Tokenize Everything\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              From music rights to player contracts, create fractional ownership of real-world assets\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card className=\"group hover:shadow-xl transition-all duration-300 border-0 shadow-lg\">\n              <CardHeader className=\"text-center pb-4\">\n                <div className=\"mx-auto bg-purple-100 rounded-full p-3 w-16 h-16 flex items-center justify-center mb-4 group-hover:bg-purple-200 transition-colors\">\n                  <Music className=\"h-8 w-8 text-purple-600\" />\n                </div>\n                <CardTitle className=\"text-xl\">Music Rights</CardTitle>\n                <CardDescription>\n                  Tokenize music royalties, streaming rights, and artist revenue shares\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"group hover:shadow-xl transition-all duration-300 border-0 shadow-lg\">\n              <CardHeader className=\"text-center pb-4\">\n                <div className=\"mx-auto bg-indigo-100 rounded-full p-3 w-16 h-16 flex items-center justify-center mb-4 group-hover:bg-indigo-200 transition-colors\">\n                  <Trophy className=\"h-8 w-8 text-indigo-600\" />\n                </div>\n                <CardTitle className=\"text-xl\">Player Rights</CardTitle>\n                <CardDescription>\n                  Own shares in player contracts, transfer fees, and performance bonuses\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"group hover:shadow-xl transition-all duration-300 border-0 shadow-lg\">\n              <CardHeader className=\"text-center pb-4\">\n                <div className=\"mx-auto bg-green-100 rounded-full p-3 w-16 h-16 flex items-center justify-center mb-4 group-hover:bg-green-200 transition-colors\">\n                  <Shirt className=\"h-8 w-8 text-green-600\" />\n                </div>\n                <CardTitle className=\"text-xl\">Merchandise</CardTitle>\n                <CardDescription>\n                  Fractional ownership of merchandise sales and licensing deals\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"group hover:shadow-xl transition-all duration-300 border-0 shadow-lg\">\n              <CardHeader className=\"text-center pb-4\">\n                <div className=\"mx-auto bg-orange-100 rounded-full p-3 w-16 h-16 flex items-center justify-center mb-4 group-hover:bg-orange-200 transition-colors\">\n                  <Users className=\"h-8 w-8 text-orange-600\" />\n                </div>\n                <CardTitle className=\"text-xl\">Fan Tokens</CardTitle>\n                <CardDescription>\n                  Revenue shares from fan token sales and engagement rewards\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* How it works */}\n      <section className=\"px-6 py-20 bg-gray-50\">\n        <div className=\"mx-auto max-w-7xl\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              How Ownible Works\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Simple steps to create and invest in real-world assets\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"mx-auto bg-purple-600 rounded-full p-4 w-16 h-16 flex items-center justify-center mb-6\">\n                <span className=\"text-2xl font-bold text-white\">1</span>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4\">Create RWA</h3>\n              <p className=\"text-gray-600\">\n                Upload your real-world asset details, set ownership percentages, and mint ERC1155 tokens\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"mx-auto bg-indigo-600 rounded-full p-4 w-16 h-16 flex items-center justify-center mb-6\">\n                <span className=\"text-2xl font-bold text-white\">2</span>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4\">Trade & Invest</h3>\n              <p className=\"text-gray-600\">\n                Buy, sell, and trade fractional ownership of assets on our marketplace\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"mx-auto bg-green-600 rounded-full p-4 w-16 h-16 flex items-center justify-center mb-6\">\n                <TrendingUp className=\"h-8 w-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-4\">Earn Returns</h3>\n              <p className=\"text-gray-600\">\n                Receive your share of revenues and profits from the underlying assets\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"px-6 py-20 bg-gradient-to-r from-purple-600 to-indigo-600\">\n        <div className=\"mx-auto max-w-4xl text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-6\">\n            Ready to Own the Future?\n          </h2>\n          <p className=\"text-xl text-purple-100 mb-8\">\n            Join thousands of users already tokenizing real-world assets on Chiliz\n          </p>\n          \n          {isConnected ? (\n            <div className=\"flex justify-center gap-4\">\n              <Link href=\"/dashboard\">\n                <Button size=\"lg\" className=\"bg-white text-purple-600 hover:bg-gray-100\">\n                  Go to Dashboard\n                </Button>\n              </Link>\n              <Link href=\"/marketplace\">\n                <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\">\n                  Explore Marketplace\n                </Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <p className=\"text-purple-100 mb-4\">Connect your wallet to get started</p>\n              <div className=\"text-sm text-purple-200\">\n                Make sure you're connected to Chiliz Spicy Testnet\n              </div>\n            </div>\n          )}\n        </div>\n      </section>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}